name: run-tests

on:
    push:
        branches: [main]
        paths:
            - '**.php'
    pull_request:
        branches: [main]
        paths:
            - '**.php'

jobs:
    test:
        runs-on: ${{ matrix.os }}
        strategy:
            fail-fast: true
            matrix:
                os: [ubuntu-latest] # windows-latest
                php: [8.1]
                laravel: [9.*]
                stability: [prefer-stable] # prefer-lowest, prefer-stable
                include:
                    - laravel: 9.*
                      testbench: 7.*
                      carbon: ^2.63

        name: P${{ matrix.php }} - L${{ matrix.laravel }} - ${{ matrix.stability }} - ${{ matrix.os }}

        env:
            GITHUB_CI: true

            DB_MYSQL_DATABASE: laravel_auto_model_cast_testing
            DB_MYSQL_USER: root
            DB_MYSQL_PASSWORD: root

        steps:
            - name: Checkout code
              uses: actions/checkout@v3

            - name: Setup PHP
              uses: shivammathur/setup-php@v2
              with:
                  php-version: ${{ matrix.php }}
                  extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite, bcmath, soap, intl, gd, exif, iconv, imagick, fileinfo
                  coverage: none

            - name: Setup problem matchers
              run: |
                  echo "::add-matcher::${{ runner.tool_cache }}/php.json"
                  echo "::add-matcher::${{ runner.tool_cache }}/phpunit.json"

            - name: Install dependencies
              run: |
                  composer require "laravel/framework:${{ matrix.laravel }}" "orchestra/testbench:${{ matrix.testbench }}" "nesbot/carbon:${{ matrix.carbon }}" --no-interaction --no-update
                  composer update --${{ matrix.stability }} --prefer-dist --no-interaction

            - name: List Installed Dependencies
              run: composer show -D

            - name: Setup MySQL
              run: |
                  sudo systemctl start mysql.service
                  mysql -e 'CREATE DATABASE ${{ env.DB_MYSQL_DATABASE }};' -u${{ env.DB_MYSQL_USER }} -p${{ env.DB_MYSQL_PASSWORD }}

            - name: Execute tests
              run: vendor/bin/pest
